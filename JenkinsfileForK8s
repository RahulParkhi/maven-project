pipeline
{
	agent any
	stages
	{
		stage ('scm checkout')
		{
			steps 
			{
				git 'https://github.com/RahulParkhi/maven-project.git'
			}
		}
		
		stage('Checkout to different branch')
		{
			steps
			{
				sh "git branch -r"
				sh "git checkout ci-cd-with-k8s"
				sh "git pull origin ci-cd-with-k8s"
			}
		}
		
		stage ('create an application package')
		{
			steps
			{
				sh label: '', script: 'mvn clean package '
			}
		}
		
		stage ('docker image build')
		{
			steps
			{
				sh 'docker build -t rapsdock/my-private-app:2.0.0 .'
			}
		}
		
		stage ('Push Docker image to private Docker Registry')
		{
			steps
			{
				withCredentials([string(credentialsId: 'DockerHubID', variable: 'DockerHubUser') , string(credentialsId: 'DockerHubPasswd', variable: 'DockerHubPasswd')])
				{
					sh "docker login -u ${DockerHubUser} -p ${DockerHubPasswd}"
				}
				sh 'docker push rapsdock/my-private-app:2.0.0'
			}
		}
		
		stage ('Deploy to K8s Cluster')
		{
			steps
			{
				script
				{
					withCredentials([string(credentialsId: 'DockerHubID', variable: 'DockerHubUser') , string(credentialsId: 'DockerHubPasswd', variable: 'DockerHubPasswd')])
					{
						def dockerlogin = 'docker login -u ${DockerHubUser} -p ${DockerHubPasswd}'
						def k8scmd = 'kubectl apply -f mytomcat-manifest.yml'

						sshagent(['K8sMaster'])
						{
							sh "scp -o StrictHostKeyChecking=no mytomcat-manifest.yml root@172.31.71.222:~/"

							sh "ssh root@172.31.71.222 ${dockerlogin}"

							sh "ssh root@172.31.71.222 ${k8scmd}"
						}
					}
				}
			}
		}	
	}
}
